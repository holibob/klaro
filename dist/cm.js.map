{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/./utils/compat.js","webpack://[name]/./utils/cookies.js","webpack://[name]/./stores.js","webpack://[name]/./consent-manager.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","currentScript","document","undefined","scripts","getElementsByTagName","length","script","src","includes","dataset","element","attributes","attribute","startsWith","slice","applyDataset","ds","keys","setAttribute","replaceCSSVariables","variables","klaroStyleElements","querySelectorAll","css","innerText","styleSheet","cssText","entries","regex","RegExp","replace","_","newElement","createElement","parentElement","appendChild","removeChild","getCookies","cookieStrings","cookie","split","cookies","cookieStr","match","exec","push","deleteCookie","path","domain","str","StorageStore","constructor","manager","handle","storageName","getItem","getWithKey","set","setItem","setWithKey","delete","removeItem","deleteWithKey","SessionStorageStore","super","sessionStorage","stores","cookieName","cookieDomain","cookiePath","cookieExpiresAfterDays","getCookie","days","expires","date","Date","setTime","getTime","toUTCString","setCookie","localStorage","ConsentManager","config","store","auxiliaryStore","storageMethod","consents","defaultConsents","confirmed","changed","states","initialized","executedOnce","watchers","Set","loadConsents","applyConsents","savedConsents","services","service","getDefaultConsent","watch","watcher","has","add","unwatch","notify","data","forEach","update","getService","matchingServices","filter","consent","default","required","changeAll","changedServices","contextualConsentOnly","map","updateConsent","resetConsents","getConsent","consentData","JSON","parse","decodeURIComponent","_checkConsents","saveAndApplyConsents","eventType","saveConsents","changedConsents","cc","k","v","encodeURIComponent","stringify","changes","type","dryRun","interactive","serviceName","executeHandler","handler","opts","handlerFunction","Function","vars","handlerOpts","onInit","state","optOut","onAccept","onDecline","updateServiceElements","updateServiceStorage","callback","onlyOnce","elements","parent","href","attrs","tagName","console","debug","text","style","display","insertBefore","attr","attrValue","title","removeProperty","removeAttribute","cookiePattern","Array","cp","pattern","j","window","location","hostname","complete"],"mappings":"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","file":"cm.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cm\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cm\"] = factory();\n\telse\n\t\troot[\"cm\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","export function currentScript(name) {\n    // most browser support this (but alas, not IE11)\n    if (document.currentScript !== null && document.currentScript !== undefined) return document.currentScript;\n    const scripts = document.getElementsByTagName('script');\n    for (let i = 0; i < scripts.length; i++) {\n        const script = scripts[i];\n        // if the script src includes the given name (klaro) we return\n        // the script and hope for the best\n        if (script.src.includes(name)) return script;\n    }\n    return null\n}\n\nexport function dataset(element) {\n    const dataset = {};\n    for (let i = 0; i < element.attributes.length; i++) {\n        const attribute = element.attributes[i];\n        if (attribute.name.startsWith('data-')) {\n            dataset[attribute.name.slice(5)] = attribute.value;\n        }\n    }\n    return dataset;\n}\n\nexport function applyDataset(ds, element) {\n    const keys = Object.keys(ds);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const value = ds[key];\n        if (element[key] === value) continue;\n        else element.setAttribute('data-' + key, value);\n    }\n}\n\n/*\nThis replaces CSS variables.\n*/\nexport function replaceCSSVariables(variables){\n    const klaroStyleElements = document.querySelectorAll('style[data-context=klaro-styles]')\n    for(const element of klaroStyleElements){\n        let css = element.innerText\n        if (element.styleSheet !== undefined) // IE\n            css = element.styleSheet.cssText\n        for(const [key, value] of Object.entries(variables)){\n            const regex = new RegExp(\"([a-z0-9-]+):[^;]+;[\\\\s\\\\n]*\\\\1:\\\\s*var\\\\(--\"+key+\",\\\\s*[^\\\\)]+\\\\)\", 'g')\n            css = css.replace(regex, (_, name) => `${name}: ${value}; ${name}: var(--${key}, ${value})`)\n        }\n        const newElement = document.createElement(\"style\")\n        newElement.setAttribute(\"type\", \"text/css\")\n        newElement.setAttribute(\"data-context\", \"klaro-styles\")\n        if (newElement.styleSheet !== undefined){\n            newElement.styleSheet.cssText = css\n        } else {\n            newElement.innerText = css\n        }\n        // we remove the old element and insert the new one\n        element.parentElement.appendChild(newElement)\n        element.parentElement.removeChild(element)\n    }\n}\n","export function getCookies() {\n    const cookieStrings = document.cookie.split(';');\n    const cookies = [];\n    const regex = new RegExp('^\\\\s*([^=]+)\\\\s*=\\\\s*(.*?)$');\n    for (let i = 0; i < cookieStrings.length; i++) {\n        const cookieStr = cookieStrings[i];\n        const match = regex.exec(cookieStr);\n        if (match === null) continue;\n        cookies.push({\n            name: match[1],\n            value: match[2],\n        });\n    }\n    return cookies;\n}\n\nexport function getCookie(name) {\n    const cookies = getCookies();\n    for (let i = 0; i < cookies.length; i++) {\n        if (cookies[i].name === name) return cookies[i];\n    }\n    return null;\n}\n\n//https://stackoverflow.com/questions/14573223/set-cookie-and-get-cookie-with-javascript\nexport function setCookie(name, value, days, domain, path) {\n    let expires = '';\n    if (days) {\n        const date = new Date();\n        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n        expires = '; expires=' + date.toUTCString();\n    }\n    if (domain !== undefined) {\n        expires += '; domain=' + domain;\n    }\n    if (path !== undefined) {\n        expires += '; path=' + path;\n    } else {\n        expires += '; path=/';\n    }\n    document.cookie =\n        name + '=' + (value || '') + expires + '; SameSite=Lax';\n}\n\nexport function deleteCookie(name, path, domain) {\n    let str = name + '=; Max-Age=-99999999;';\n    // try to delete the cookie without any path and domain\n    document.cookie = str;\n    str += ' path=' + (path || '/') + ';';\n    // try to delete the cookie with path\n    document.cookie = str;\n    if (domain !== undefined) {\n        str += ' domain=' + domain + ';';\n        // try to delete the cookie with domain and path\n        document.cookie = str;\n    }\n}\n","import {getCookie, setCookie, deleteCookie} from './utils/cookies'\n\n\nexport class TestStore {\n    constructor(){\n        this.value = null\n    }\n\n    get() {\n        return this.value\n    }\n\n    set(value) {\n        this.value = value;\n    }\n\n    delete() {\n        this.value = null\n    }\n}\n\nexport class CookieStore {\n    constructor(manager) {\n        this.cookieName = manager.storageName\n        this.cookieDomain = manager.cookieDomain\n        this.cookiePath = manager.cookiePath\n        this.cookieExpiresAfterDays = manager.cookieExpiresAfterDays\n    }\n\n    get() {\n        const cookie = getCookie(this.cookieName);\n        return cookie\n            ? cookie.value\n            : null;\n    }\n\n    set(value) {\n        return setCookie(this.cookieName, value, this.cookieExpiresAfterDays, this.cookieDomain, this.cookiePath)\n    }\n\n    delete() {\n        return deleteCookie(this.cookieName);\n    }\n}\n\nclass StorageStore {\n    constructor(manager, handle) {\n        this.key = manager.storageName;\n        this.handle = handle\n    }\n\n    get() {\n        return this.handle.getItem(this.key);\n    }\n\n    getWithKey(key) {\n        return this.handle.getItem(key);\n    }\n\n    set(value) {\n        return this.handle.setItem(this.key, value)\n    }\n\n    setWithKey(key, value) {\n        return this.handle.setItem(key, value)\n    }\n\n    delete() {\n        return this.handle.removeItem(this.key);\n    }\n\n    deleteWithKey(key) {\n        return this.handle.removeItem(key);\n    }\n}\n\nexport class LocalStorageStore extends StorageStore {\n    constructor(manager){\n        super(manager, localStorage)\n    }\n}\n\nexport class SessionStorageStore extends StorageStore {\n    constructor(manager){\n        super(manager, sessionStorage)\n    }\n}\n\nconst stores = {\n    'cookie': CookieStore,\n    'test': TestStore,\n    'localStorage': LocalStorageStore,\n    'sessionStorage': SessionStorageStore,\n}\n\nexport default stores\n","import {getCookies, deleteCookie} from './utils/cookies'\nimport {dataset, applyDataset} from './utils/compat'\nimport stores, { SessionStorageStore } from './stores'\n\nexport default class ConsentManager {\n\n    constructor(config, store, auxiliaryStore){\n        this.config = config // the configuration\n\n        if (store !== undefined)\n            this.store = store\n        else\n            this.store = new stores[this.storageMethod](this)\n\n        // we fall back to the cookie-based store if the store is undefined\n        if (this.store === undefined)\n            this.store = stores['cookie']\n\n        if (auxiliaryStore !== undefined)\n            this.auxiliaryStore = auxiliaryStore\n        else\n            this.auxiliaryStore = new SessionStorageStore(this)\n\n        this.consents = this.defaultConsents // the consent states of the configured services\n        this.confirmed = false // true if the user actively confirmed his/her consent\n        this.changed = false // true if the service config changed compared to the cookie\n        this.states = {} // keep track of the change (enabled, disabled) of individual services\n        this.initialized = {} // keep track of which services have been initialized already\n        this.executedOnce = {} //keep track of which services have been executed at least once\n        this.watchers = new Set([])\n        this.loadConsents()\n        this.applyConsents()\n        this.savedConsents = {...this.consents}\n    }\n\n    get storageMethod(){\n        return this.config.storageMethod || 'cookie'\n    }\n\n    get storageName(){\n        return this.config.storageName || this.config.cookieName || 'klaro' // deprecated: cookieName\n    }\n\n    get cookieDomain(){\n        return this.config.cookieDomain || undefined\n    }\n\n    get cookiePath(){\n        return this.config.cookiePath || undefined\n    }\n\n    get cookieExpiresAfterDays(){\n        return this.config.cookieExpiresAfterDays || 120\n    }\n\n    get defaultConsents(){\n        const consents = {}\n        for(let i=0;i<this.config.services.length;i++){\n            const service = this.config.services[i]\n            consents[service.name] = this.getDefaultConsent(service)\n        }\n        return consents\n    }\n\n    watch(watcher){\n        if (!this.watchers.has(watcher))\n            this.watchers.add(watcher)\n    }\n\n    unwatch(watcher){\n        if (this.watchers.has(watcher))\n            this.watchers.delete(watcher)\n    }\n\n    notify(name, data){\n        this.watchers.forEach((watcher) => {\n            watcher.update(this, name, data)\n        })\n    }\n\n    getService(name){\n        const matchingServices = this.config.services.filter(service=>service.name === name)\n        if (matchingServices.length > 0)\n            return matchingServices[0]\n        return undefined\n    }\n\n    getDefaultConsent(service){\n        let consent = service.default || service.required\n        if (consent === undefined)\n            consent = this.config.default\n        if (consent === undefined)\n            consent = false\n        return consent\n    }\n\n    changeAll(value){\n        let changedServices = 0\n        this.config.services.filter(service => !service.contextualConsentOnly).map(service => {\n            if(service.required || this.config.required || value) {\n                if (this.updateConsent(service.name, true))\n                    changedServices++\n            } else {\n                if (this.updateConsent(service.name, false))\n                    changedServices++\n            }\n        })\n        return changedServices\n    }\n\n    updateConsent(name, value){\n        const changed = (this.consents[name] || false) !== value\n        this.consents[name] = value\n        this.notify('consents', this.consents)\n        return changed\n    }\n\n    resetConsents(){\n        this.consents = this.defaultConsents\n        this.states = {}\n        this.confirmed = false\n        this.applyConsents()\n        this.savedConsents = {...this.consents}\n        this.store.delete()\n        this.notify('consents', this.consents)\n    }\n\n    getConsent(name){\n        return this.consents[name] || false\n    }\n\n    loadConsents(){\n        const consentData = this.store.get();\n        if (consentData !== null){\n            this.consents = JSON.parse(decodeURIComponent(consentData))\n            this._checkConsents()\n            this.notify('consents', this.consents)\n        }\n        return this.consents\n    }\n\n    saveAndApplyConsents(eventType){\n        this.saveConsents(eventType)\n        this.applyConsents()\n    }\n\n    changedConsents(){\n        const cc = {}\n        for(const [k, v] of Object.entries(this.consents)){\n            if (this.savedConsents[k] !== v)\n                cc[k] = v\n        }\n        return cc\n    }\n\n    saveConsents(eventType){\n        const v = encodeURIComponent(JSON.stringify(this.consents))\n        this.store.set(v);\n        this.confirmed = true\n        this.changed = false\n        const changes = this.changedConsents()\n        this.savedConsents = {...this.consents}\n        this.notify('saveConsents', {changes: changes, consents: this.consents, type: eventType || 'script'})\n    }\n\n    applyConsents(dryRun, interactive, serviceName){\n\n        function executeHandler(handler, opts){\n            if (handler === undefined)\n                return\n            let handlerFunction\n            if (typeof handler === 'function'){\n                handlerFunction = handler\n            } else {\n                // eslint-disable-next-line no-new-func\n                handlerFunction = new Function('opts', handler)\n            }\n            return handlerFunction(opts)\n        }\n\n        let changedServices = 0\n\n        // we make sure all services are properly initialized\n        for(let i=0;i<this.config.services.length;i++){\n            const service = this.config.services[i]\n            if (serviceName !== undefined && serviceName !== service.name)\n                continue\n            const vars = service.vars || {}\n            const handlerOpts = {service: service, config: this.config, vars: vars}\n            // we execute the init function of the service (if it is defined)\n            if (!this.initialized[service.name]){\n                this.initialized[service.name] = true\n                executeHandler(service.onInit, handlerOpts)\n            }\n        }\n\n        for(let i=0;i<this.config.services.length;i++){\n            const service = this.config.services[i]\n            if (serviceName !== undefined && serviceName !== service.name)\n                continue\n            const state = this.states[service.name]\n            const vars = service.vars || {}\n            const optOut = (service.optOut !== undefined ? service.optOut : (this.config.optOut || false))\n            const required = (service.required !== undefined ? service.required : (this.config.required || false))\n            //opt out and required services are always treated as confirmed\n            const confirmed = this.confirmed || optOut || dryRun || interactive\n            const consent = (this.getConsent(service.name) && confirmed) || required\n            const handlerOpts = {service: service, config: this.config, vars: vars, consents: this.consents, confirmed: this.confirmed}\n\n            if (state !== consent)\n                changedServices++\n\n            if (dryRun)\n                continue\n\n            // we execute custom service handlers (if they are defined)\n            executeHandler(consent ? service.onAccept : service.onDecline, handlerOpts)\n            this.updateServiceElements(service, consent)\n            this.updateServiceStorage(service, consent)\n\n            // we execute the service callback (if one is defined)\n            if (service.callback !== undefined)\n                service.callback(consent, service)\n\n            // we execute the global callback (if one is defined)\n            if (this.config.callback !== undefined)\n                this.config.callback(consent, service)\n\n            this.states[service.name] = consent\n        }\n        this.notify('applyConsents', changedServices, serviceName)\n        return changedServices\n    }\n\n    updateServiceElements(service, consent){\n\n        // we make sure we execute this service only once if the option is set\n        if (consent){\n            if (service.onlyOnce && this.executedOnce[service.name])\n                return\n            this.executedOnce[service.name] = true\n        }\n\n        const elements = document.querySelectorAll(\"[data-name='\"+service.name+\"']\")\n        for(let i=0;i<elements.length;i++){\n\n            const element = elements[i]\n\n            const parent = element.parentElement\n            const ds = dataset(element)\n            const {type, src, href} = ds\n            const attrs = ['href', 'src', 'type']\n\n            // we handle placeholder elements here...\n            if (type === 'placeholder'){\n                if (consent){\n                    element.style.display = 'none';\n                    ds['original-display'] = element.style.display;\n                }\n                else{\n                    element.style.display = ds['original-display'] || 'block';\n                }\n                continue\n            }\n\n            if (element.tagName === 'IFRAME'){\n                // this element is already active, we do not touch it...\n                if (consent && element.src === src){\n                    // eslint-disable-next-line no-console\n                    console.debug(`Skipping ${element.tagName} for service ${service.name}, as it already has the correct type...`)\n                    continue\n                }\n                // we create a new script instead of updating the node in\n                // place, as the script won't start correctly otherwise\n                const newElement = document.createElement(element.tagName)\n                for(const attribute of element.attributes){\n                    newElement.setAttribute(attribute.name, attribute.value)\n                }\n                newElement.innerText = element.innerText\n                newElement.text = element.text\n\n                if (consent){\n                    if (ds['original-display'] !== undefined)\n                        newElement.style.display = ds['original-display']\n                    if (ds.src !== undefined)\n                        newElement.src = ds.src\n                } else {\n                    newElement.src = ''\n                    if (ds['modified-by-klaro'] !== undefined && ds['original-display'] !== undefined) // this is already a placeholder\n                        newElement.setAttribute('data-original-display', ds['original-display'])\n                    else {// this is a new element we haven't touched before\n                        if (element.style.display !== undefined)\n                            newElement.setAttribute('data-original-display', element.style.display)\n                        newElement.setAttribute('data-modified-by-klaro', 'yes')\n                    }\n                    newElement.style.display = 'none'\n                }\n                //we remove the original element and insert a new one\n                parent.insertBefore(newElement, element)\n                parent.removeChild(element)\n            } else if (element.tagName === 'SCRIPT' || element.tagName === 'LINK'){\n                // this element is already active, we do not touch it...\n                if (consent && element.type === (type || \"\") && element.src === src){\n                    // eslint-disable-next-line no-console\n                    console.debug(`Skipping ${element.tagName} for service ${service.name}, as it already has the correct type or src...`)\n                    continue\n                }\n                // we create a new script instead of updating the node in\n                // place, as the script won't start correctly otherwise\n                const newElement = document.createElement(element.tagName)\n                for(const attribute of element.attributes){\n                    newElement.setAttribute(attribute.name, attribute.value)\n                }\n\n                newElement.innerText = element.innerText\n                newElement.text = element.text\n\n                if (consent){\n                    newElement.type = type || \"\"\n                    if (src !== undefined)\n                        newElement.src = src\n                    if (href !== undefined)\n                        newElement.href = href\n                } else {\n                    newElement.type = 'text/plain'\n                }\n                //we remove the original element and insert a new one\n                parent.insertBefore(newElement, element)\n                parent.removeChild(element)\n            } else {\n                // all other elements (images etc.) are modified in place...\n                if (consent){\n                    for(const attr of attrs){\n                        const attrValue = ds[attr]\n                        if (attrValue === undefined)\n                            continue\n                        if (ds['original-'+attr] === undefined)\n                            ds['original-'+attr] = element[attr]\n                        element[attr] = attrValue\n                    }\n                    if (ds.title !== undefined)\n                        element.title = ds.title\n                    if (ds['original-display'] !== undefined){\n                        element.style.display = ds['original-display']\n                    } else {\n                        element.style.removeProperty('display')\n                    }\n                }\n                else{\n                    if (ds.title !== undefined)\n                        element.removeAttribute('title')\n                    if (ds['original-display'] === undefined && element.style.display !== undefined)\n                        ds['original-display'] = element.style.display\n                    element.style.display = 'none'\n                    for(const attr of attrs){\n                        const attrValue = ds[attr]\n                        if (attrValue === undefined)\n                            continue\n                        if (ds['original-'+attr] !== undefined)\n                            element[attr] = ds['original-'+attr]\n                        else\n                            element.removeAttribute(attr)\n                    }\n                }\n                applyDataset(ds, element)\n            }\n        }\n\n    }\n\n    updateServiceStorage(service, consent){\n\n        if (consent)\n            return\n\n        function escapeRegexStr(str) {\n            return str.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, \"\\\\$&\");\n        }\n\n        if (service.cookies !== undefined && service.cookies.length > 0){\n            const cookies = getCookies()\n            for(let i=0;i<service.cookies.length;i++){\n                let cookiePattern = service.cookies[i]\n                let cookiePath, cookieDomain\n                if (cookiePattern instanceof Array){\n                    [cookiePattern, cookiePath, cookieDomain] = cookiePattern\n                } else if (cookiePattern instanceof Object && !(cookiePattern instanceof RegExp)){\n                    const cp = cookiePattern\n                    cookiePattern = cp.pattern\n                    cookiePath = cp.path\n                    cookieDomain = cp.domain\n                }\n                if (cookiePattern === undefined)\n                    continue\n                if (!(cookiePattern instanceof RegExp)){\n                    if (cookiePattern.startsWith('^')) // we assume this is already a regex\n                        cookiePattern = new RegExp(cookiePattern)\n                    else // we assume this is a normal string\n                        cookiePattern = new RegExp('^'+escapeRegexStr(cookiePattern)+'$')\n                }\n                for(let j=0;j<cookies.length;j++){\n                    const cookie = cookies[j]\n                    const match = cookiePattern.exec(cookie.name)\n                    if (match !== null){\n                        // eslint-disable-next-line no-console\n                        console.debug(\"Deleting cookie:\", cookie.name,\n                            \"Matched pattern:\", cookiePattern,\n                            \"Path:\", cookiePath,\n                            \"Domain:\", cookieDomain)\n                        deleteCookie(cookie.name, cookiePath, cookieDomain)\n                        // if no cookie domain is given, we also try to delete the cookie with\n                        // domain '.[current domain]' as some services set cookies for this\n                        // dotted domain explicitly (e.g. the Facebook pixel).\n                        if (cookieDomain === undefined)\n                            deleteCookie(cookie.name, cookiePath, '.'+window.location.hostname)\n                    }\n                }\n            }\n        }\n    }\n\n    _checkConsents(){\n        let complete = true\n        const services = new Set(this.config.services.map((service)=>{return service.name}))\n        const consents = new Set(Object.keys(this.consents))\n        for(const key of Object.keys(this.consents)){\n            if (!services.has(key)){\n                delete this.consents[key]\n            }\n        }\n        for(const service of this.config.services){\n            if (!consents.has(service.name)){\n                this.consents[service.name] = this.getDefaultConsent(service)\n                complete = false\n            }\n        }\n        this.confirmed = complete\n        if (!complete)\n            this.changed = true\n    }\n\n}\n"],"sourceRoot":""}